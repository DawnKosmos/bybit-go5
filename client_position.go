// Code generated by bybitgen; DO NOT EDIT.
package bybit

import (
	"github.com/DawnKosmos/bybit-go5/models"
)

// GET /v5/position/closed-pnl
func (c *Client) GetPositionClosedPnl(req models.GetPositionClosedPnlRequest) (*models.GetPositionClosedPnlResponse, error) {
	var respBody models.Response[models.GetPositionClosedPnlResponse]
	if err := c.GET("/v5/position/closed-pnl", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/position/get-closed-positions
func (c *Client) GetPositionGetClosedPositions(req models.GetPositionGetClosedPositionsRequest) (*models.GetPositionGetClosedPositionsResponse, error) {
	var respBody models.Response[models.GetPositionGetClosedPositionsResponse]
	if err := c.GET("/v5/position/get-closed-positions", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/position/list
func (c *Client) GetPositionList(req models.GetPositionListRequest) (*models.GetPositionListResponse, error) {
	var respBody models.Response[models.GetPositionListResponse]
	if err := c.GET("/v5/position/list", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/position/move-history
func (c *Client) GetPositionMoveHistory(req models.GetPositionMoveHistoryRequest) (*models.GetPositionMoveHistoryResponse, error) {
	var respBody models.Response[models.GetPositionMoveHistoryResponse]
	if err := c.GET("/v5/position/move-history", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/add-margin
func (c *Client) PostPositionAddMargin(req models.PostPositionAddMarginRequest) (*models.PostPositionAddMarginResponse, error) {
	var respBody models.Response[models.PostPositionAddMarginResponse]
	if err := c.POST("/v5/position/add-margin", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/confirm-pending-mmr
func (c *Client) PostPositionConfirmPendingMmr(req models.PostPositionConfirmPendingMmrRequest) (*models.PostPositionConfirmPendingMmrResponse, error) {
	var respBody models.Response[models.PostPositionConfirmPendingMmrResponse]
	if err := c.POST("/v5/position/confirm-pending-mmr", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/move-positions
func (c *Client) PostPositionMovePositions(req models.PostPositionMovePositionsRequest) (*models.PostPositionMovePositionsResponse, error) {
	var respBody models.Response[models.PostPositionMovePositionsResponse]
	if err := c.POST("/v5/position/move-positions", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/set-auto-add-margin
func (c *Client) PostPositionSetAutoAddMargin(req models.PostPositionSetAutoAddMarginRequest) (*models.PostPositionSetAutoAddMarginResponse, error) {
	var respBody models.Response[models.PostPositionSetAutoAddMarginResponse]
	if err := c.POST("/v5/position/set-auto-add-margin", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/set-leverage
func (c *Client) PostPositionSetLeverage(req models.PostPositionSetLeverageRequest) (*models.PostPositionSetLeverageResponse, error) {
	var respBody models.Response[models.PostPositionSetLeverageResponse]
	if err := c.POST("/v5/position/set-leverage", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/set-risk-limit
func (c *Client) PostPositionSetRiskLimit(req models.PostPositionSetRiskLimitRequest) (*models.PostPositionSetRiskLimitResponse, error) {
	var respBody models.Response[models.PostPositionSetRiskLimitResponse]
	if err := c.POST("/v5/position/set-risk-limit", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/set-tpsl-mode
func (c *Client) PostPositionSetTpslMode(req models.PostPositionSetTpslModeRequest) (*models.PostPositionSetTpslModeResponse, error) {
	var respBody models.Response[models.PostPositionSetTpslModeResponse]
	if err := c.POST("/v5/position/set-tpsl-mode", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/switch-isolated
func (c *Client) PostPositionSwitchIsolated(req models.PostPositionSwitchIsolatedRequest) (*models.PostPositionSwitchIsolatedResponse, error) {
	var respBody models.Response[models.PostPositionSwitchIsolatedResponse]
	if err := c.POST("/v5/position/switch-isolated", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/switch-mode
func (c *Client) PostPositionSwitchMode(req models.PostPositionSwitchModeRequest) (*models.PostPositionSwitchModeResponse, error) {
	var respBody models.Response[models.PostPositionSwitchModeResponse]
	if err := c.POST("/v5/position/switch-mode", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/position/trading-stop
func (c *Client) PostPositionTradingStop(req models.PostPositionTradingStopRequest) (*models.PostPositionTradingStopResponse, error) {
	var respBody models.Response[models.PostPositionTradingStopResponse]
	if err := c.POST("/v5/position/trading-stop", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

