// Code generated by bybitgen; DO NOT EDIT.
package bybit

import "github.com/DawnKosmos/bybit-go5/models"

// WsPublicAPI abstracts the public subscribe methods so callers can
// pass any implementation (e.g., *ws.Stream) without introducing an
// import cycle from package bybit -> ws -> bybit.
type WsPublicAPI interface {
	Orderbook(symbol string, depth int, fn func(e *models.WsOrderbook)) error
	PublicTrade(symbol string, fn func(e *models.WsTrade)) error
	TickerOption(symbol string, fn func(e *models.WsTickerOption)) error
	TickerLinear(symbol string, fn func(e *models.WsTickerLinear)) error
	TickerSpot(symbol string, fn func(e *models.WsTickerSpot)) error
	Kline(symbol string, interval string, fn func(e *models.WsKline)) error
	Liquidation(symbol string, fn func(e *models.WsLiquidation)) error
	LeveragedTokenKline(symbol string, interval string, fn func(e *models.WsLTKline)) error
	LeveragedTokenTicker(symbol string, fn func(e *models.WsLTTicker)) error
	LeveragedTokenNav(symbol string, fn func(e *models.WsLTNav)) error
}

// WsPrivateAPI abstracts the private subscribe methods.
type WsPrivateAPI interface {
	Position(fn func(e *models.WsPosition)) error
	Execution(fn func(e *models.WsExecution)) error
	Order(fn func(e *models.WsOrder)) error
	Wallet(fn func(e *models.WsWallet)) error
	Greek(fn func(e *models.WsGreek)) error
}
