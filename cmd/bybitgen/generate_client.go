package main

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"
)

func writeClientFile(rootDir, folder string, eps []Endpoint) error {
	var b strings.Builder
	b.WriteString("// Code generated by bybitgen; DO NOT EDIT.\n")
	b.WriteString("package bybit\n\n")
	b.WriteString("import (\n\t\"github.com/DawnKosmos/bybit-go5/models\"\n)\n\n")
	for _, ep := range eps {
		b.WriteString(fmt.Sprintf("// %s %s\n", ep.Method, ep.Path))
		b.WriteString(fmt.Sprintf("func (c *Client) %s(req models.%sRequest) (*models.%sResponse, error) {\n", ep.Name, ep.Name, ep.Name))
		b.WriteString(fmt.Sprintf("\tvar respBody models.Response[models.%sResponse]\n", ep.Name))
		if ep.Method == "GET" {
			b.WriteString(fmt.Sprintf("\tif err := c.GET(\"%s\", req, &respBody); err != nil { return nil, err }\n", ep.Path))
		} else {
			b.WriteString(fmt.Sprintf("\tif err := c.POST(\"%s\", req, &respBody); err != nil { return nil, err }\n", ep.Path))
		}
		b.WriteString("\treturn &respBody.Result, nil\n}\n\n")
	}
	file := filepath.Join(rootDir, fmt.Sprintf("client_%s.go", folder))
	return os.WriteFile(file, []byte(b.String()), 0o644)
}
