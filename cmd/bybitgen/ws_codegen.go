package main

import (
	"os"
	"path/filepath"
)

// generateWSArtifacts ensures WS-generated files exist and are up to date.
// For now, we only (re)write the latest alias file to map unversioned names to V5.
// Versioned model files (ws_v5_*.go) are maintained separately and preserved by cleanup.
func generateWSArtifacts(modelsDir string) error {
	if err := os.MkdirAll(modelsDir, 0o755); err != nil {
		return err
	}
	// Always refresh latest alias file so consumers get the intended default version.
	latest := `// Code generated by bybitgen; DO NOT EDIT.
package models

// Latest aliases map unversioned names to the latest supported WS version (V5).
// Update these when introducing a newer WS version.

type WsOrderbook = WsOrderbookV5
type WsTrade = WsTradeV5
type WsTickerOption = WsTickerOptionV5
type WsTickerLinear = WsTickerLinearV5
type WsTickerSpot = WsTickerSpotV5
type WsKline = WsKlineV5
type WsLiquidation = WsLiquidationV5
type WsLTKline = WsLTKlineV5
type WsLTTicker = WsLTTickerV5
type WsLTNav = WsLTNavV5

// Private topics
type WsPosition = WsPositionV5
type WsExecution = WsExecutionV5
type WsOrder = WsOrderV5
type WsWallet = WsWalletV5
type WsGreek = WsGreekV5
`
	path := filepath.Join(modelsDir, "ws_latest.go")
	return os.WriteFile(path, []byte(latest), 0o644)
}
