// Code generated by bybitgen; DO NOT EDIT.
package bybit

import (
	"github.com/DawnKosmos/bybit-go5/models"
)

// GET /v5/account/borrow-history
func (c *Client) GetAccountBorrowHistory(req models.GetAccountBorrowHistoryRequest) (*models.GetAccountBorrowHistoryResponse, error) {
	var respBody models.Response[models.GetAccountBorrowHistoryResponse]
	if err := c.GET("/v5/account/borrow-history", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/collateral-info
func (c *Client) GetAccountCollateralInfo(req models.GetAccountCollateralInfoRequest) (*models.GetAccountCollateralInfoResponse, error) {
	var respBody models.Response[models.GetAccountCollateralInfoResponse]
	if err := c.GET("/v5/account/collateral-info", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/contract-transaction-log
func (c *Client) GetAccountContractTransactionLog(req models.GetAccountContractTransactionLogRequest) (*models.GetAccountContractTransactionLogResponse, error) {
	var respBody models.Response[models.GetAccountContractTransactionLogResponse]
	if err := c.GET("/v5/account/contract-transaction-log", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/fee-rate
func (c *Client) GetAccountFeeRate(req models.GetAccountFeeRateRequest) (*models.GetAccountFeeRateResponse, error) {
	var respBody models.Response[models.GetAccountFeeRateResponse]
	if err := c.GET("/v5/account/fee-rate", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/info
func (c *Client) GetAccountInfo(req models.GetAccountInfoRequest) (*models.GetAccountInfoResponse, error) {
	var respBody models.Response[models.GetAccountInfoResponse]
	if err := c.GET("/v5/account/info", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/mmp-state
func (c *Client) GetAccountMmpState(req models.GetAccountMmpStateRequest) (*models.GetAccountMmpStateResponse, error) {
	var respBody models.Response[models.GetAccountMmpStateResponse]
	if err := c.GET("/v5/account/mmp-state", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/query-dcp-info
func (c *Client) GetAccountQueryDcpInfo(req models.GetAccountQueryDcpInfoRequest) (*models.GetAccountQueryDcpInfoResponse, error) {
	var respBody models.Response[models.GetAccountQueryDcpInfoResponse]
	if err := c.GET("/v5/account/query-dcp-info", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/smp-group
func (c *Client) GetAccountSmpGroup(req models.GetAccountSmpGroupRequest) (*models.GetAccountSmpGroupResponse, error) {
	var respBody models.Response[models.GetAccountSmpGroupResponse]
	if err := c.GET("/v5/account/smp-group", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/transaction-log
func (c *Client) GetAccountTransactionLog(req models.GetAccountTransactionLogRequest) (*models.GetAccountTransactionLogResponse, error) {
	var respBody models.Response[models.GetAccountTransactionLogResponse]
	if err := c.GET("/v5/account/transaction-log", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/wallet-balance
func (c *Client) GetAccountWalletBalance(req models.GetAccountWalletBalanceRequest) (*models.GetAccountWalletBalanceResponse, error) {
	var respBody models.Response[models.GetAccountWalletBalanceResponse]
	if err := c.GET("/v5/account/wallet-balance", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/account/withdrawal
func (c *Client) GetAccountWithdrawal(req models.GetAccountWithdrawalRequest) (*models.GetAccountWithdrawalResponse, error) {
	var respBody models.Response[models.GetAccountWithdrawalResponse]
	if err := c.GET("/v5/account/withdrawal", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/asset/coin-greeks
func (c *Client) GetAssetCoinGreeks(req models.GetAssetCoinGreeksRequest) (*models.GetAssetCoinGreeksResponse, error) {
	var respBody models.Response[models.GetAssetCoinGreeksResponse]
	if err := c.GET("/v5/asset/coin-greeks", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/mmp-modify
func (c *Client) PostAccountMmpModify(req models.PostAccountMmpModifyRequest) (*models.PostAccountMmpModifyResponse, error) {
	var respBody models.Response[models.PostAccountMmpModifyResponse]
	if err := c.POST("/v5/account/mmp-modify", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/mmp-reset
func (c *Client) PostAccountMmpReset(req models.PostAccountMmpResetRequest) (*models.PostAccountMmpResetResponse, error) {
	var respBody models.Response[models.PostAccountMmpResetResponse]
	if err := c.POST("/v5/account/mmp-reset", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/quick-repayment
func (c *Client) PostAccountQuickRepayment(req models.PostAccountQuickRepaymentRequest) (*models.PostAccountQuickRepaymentResponse, error) {
	var respBody models.Response[models.PostAccountQuickRepaymentResponse]
	if err := c.POST("/v5/account/quick-repayment", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/set-collateral-switch
func (c *Client) PostAccountSetCollateralSwitch(req models.PostAccountSetCollateralSwitchRequest) (*models.PostAccountSetCollateralSwitchResponse, error) {
	var respBody models.Response[models.PostAccountSetCollateralSwitchResponse]
	if err := c.POST("/v5/account/set-collateral-switch", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/set-collateral-switch-batch
func (c *Client) PostAccountSetCollateralSwitchBatch(req models.PostAccountSetCollateralSwitchBatchRequest) (*models.PostAccountSetCollateralSwitchBatchResponse, error) {
	var respBody models.Response[models.PostAccountSetCollateralSwitchBatchResponse]
	if err := c.POST("/v5/account/set-collateral-switch-batch", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/set-hedging-mode
func (c *Client) PostAccountSetHedgingMode(req models.PostAccountSetHedgingModeRequest) (*models.PostAccountSetHedgingModeResponse, error) {
	var respBody models.Response[models.PostAccountSetHedgingModeResponse]
	if err := c.POST("/v5/account/set-hedging-mode", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/set-limit-px-action
func (c *Client) PostAccountSetLimitPxAction(req models.PostAccountSetLimitPxActionRequest) (*models.PostAccountSetLimitPxActionResponse, error) {
	var respBody models.Response[models.PostAccountSetLimitPxActionResponse]
	if err := c.POST("/v5/account/set-limit-px-action", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/set-margin-mode
func (c *Client) PostAccountSetMarginMode(req models.PostAccountSetMarginModeRequest) (*models.PostAccountSetMarginModeResponse, error) {
	var respBody models.Response[models.PostAccountSetMarginModeResponse]
	if err := c.POST("/v5/account/set-margin-mode", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/account/upgrade-to-uta
func (c *Client) PostAccountUpgradeToUta(req models.PostAccountUpgradeToUtaRequest) (*models.PostAccountUpgradeToUtaResponse, error) {
	var respBody models.Response[models.PostAccountUpgradeToUtaResponse]
	if err := c.POST("/v5/account/upgrade-to-uta", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

