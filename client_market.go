// Code generated by bybitgen; DO NOT EDIT.
package bybit

import (
	"github.com/DawnKosmos/bybit-go5/models"
)

// GET /v5/market/account-ratio
func (c *Client) GetMarketAccountRatio(req models.GetMarketAccountRatioRequest) (*models.GetMarketAccountRatioResponse, error) {
	var respBody models.Response[models.GetMarketAccountRatioResponse]
	if err := c.GET("/v5/market/account-ratio", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/delivery-price
func (c *Client) GetMarketDeliveryPrice(req models.GetMarketDeliveryPriceRequest) (*models.GetMarketDeliveryPriceResponse, error) {
	var respBody models.Response[models.GetMarketDeliveryPriceResponse]
	if err := c.GET("/v5/market/delivery-price", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/funding/history
func (c *Client) GetMarketFundingHistory(req models.GetMarketFundingHistoryRequest) (*models.GetMarketFundingHistoryResponse, error) {
	var respBody models.Response[models.GetMarketFundingHistoryResponse]
	if err := c.GET("/v5/market/funding/history", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/historical-volatility
func (c *Client) GetMarketHistoricalVolatility(req models.GetMarketHistoricalVolatilityRequest) (*models.GetMarketHistoricalVolatilityResponse, error) {
	var respBody models.Response[models.GetMarketHistoricalVolatilityResponse]
	if err := c.GET("/v5/market/historical-volatility", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/index-price-kline
func (c *Client) GetMarketIndexPriceKline(req models.GetMarketIndexPriceKlineRequest) (*models.GetMarketIndexPriceKlineResponse, error) {
	var respBody models.Response[models.GetMarketIndexPriceKlineResponse]
	if err := c.GET("/v5/market/index-price-kline", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/instruments-info for category: linear
func (c *Client) GetMarketInstrumentsInfoLinear(req models.GetMarketInstrumentsInfoRequest) (*models.GetMarketInstrumentsInfoLinearResponse, error) {
	req.Category = "linear"
	var respBody models.Response[models.GetMarketInstrumentsInfoLinearResponse]
	if err := c.GET("/v5/market/instruments-info", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/instruments-info for category: option
func (c *Client) GetMarketInstrumentsInfoOption(req models.GetMarketInstrumentsInfoRequest) (*models.GetMarketInstrumentsInfoOptionResponse, error) {
	req.Category = "option"
	var respBody models.Response[models.GetMarketInstrumentsInfoOptionResponse]
	if err := c.GET("/v5/market/instruments-info", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/instruments-info for category: spot
func (c *Client) GetMarketInstrumentsInfoSpot(req models.GetMarketInstrumentsInfoRequest) (*models.GetMarketInstrumentsInfoSpotResponse, error) {
	req.Category = "spot"
	var respBody models.Response[models.GetMarketInstrumentsInfoSpotResponse]
	if err := c.GET("/v5/market/instruments-info", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/instruments-info (generic - use category-specific methods for type safety)
func (c *Client) GetMarketInstrumentsInfo(req models.GetMarketInstrumentsInfoRequest) (*models.GetMarketInstrumentsInfoResponse, error) {
	var respBody models.Response[models.GetMarketInstrumentsInfoResponse]
	if err := c.GET("/v5/market/instruments-info", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/insurance
func (c *Client) GetMarketInsurance(req models.GetMarketInsuranceRequest) (*models.GetMarketInsuranceResponse, error) {
	var respBody models.Response[models.GetMarketInsuranceResponse]
	if err := c.GET("/v5/market/insurance", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/kline
func (c *Client) GetMarketKline(req models.GetMarketKlineRequest) (*models.GetMarketKlineResponse, error) {
	var respBody models.Response[models.GetMarketKlineResponse]
	if err := c.GET("/v5/market/kline", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/mark-price-kline
func (c *Client) GetMarketMarkPriceKline(req models.GetMarketMarkPriceKlineRequest) (*models.GetMarketMarkPriceKlineResponse, error) {
	var respBody models.Response[models.GetMarketMarkPriceKlineResponse]
	if err := c.GET("/v5/market/mark-price-kline", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/open-interest
func (c *Client) GetMarketOpenInterest(req models.GetMarketOpenInterestRequest) (*models.GetMarketOpenInterestResponse, error) {
	var respBody models.Response[models.GetMarketOpenInterestResponse]
	if err := c.GET("/v5/market/open-interest", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/orderbook
func (c *Client) GetMarketOrderbook(req models.GetMarketOrderbookRequest) (*models.GetMarketOrderbookResponse, error) {
	var respBody models.Response[models.GetMarketOrderbookResponse]
	if err := c.GET("/v5/market/orderbook", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/premium-index-price-kline
func (c *Client) GetMarketPremiumIndexPriceKline(req models.GetMarketPremiumIndexPriceKlineRequest) (*models.GetMarketPremiumIndexPriceKlineResponse, error) {
	var respBody models.Response[models.GetMarketPremiumIndexPriceKlineResponse]
	if err := c.GET("/v5/market/premium-index-price-kline", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/price-limit
func (c *Client) GetMarketPriceLimit(req models.GetMarketPriceLimitRequest) (*models.GetMarketPriceLimitResponse, error) {
	var respBody models.Response[models.GetMarketPriceLimitResponse]
	if err := c.GET("/v5/market/price-limit", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/recent-trade
func (c *Client) GetMarketRecentTrade(req models.GetMarketRecentTradeRequest) (*models.GetMarketRecentTradeResponse, error) {
	var respBody models.Response[models.GetMarketRecentTradeResponse]
	if err := c.GET("/v5/market/recent-trade", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/risk-limit
func (c *Client) GetMarketRiskLimit(req models.GetMarketRiskLimitRequest) (*models.GetMarketRiskLimitResponse, error) {
	var respBody models.Response[models.GetMarketRiskLimitResponse]
	if err := c.GET("/v5/market/risk-limit", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/tickers for category: linear
func (c *Client) GetMarketTickersLinear(req models.GetMarketTickersRequest) (*models.GetMarketTickersLinearResponse, error) {
	req.Category = "linear"
	var respBody models.Response[models.GetMarketTickersLinearResponse]
	if err := c.GET("/v5/market/tickers", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/tickers for category: option
func (c *Client) GetMarketTickersOption(req models.GetMarketTickersRequest) (*models.GetMarketTickersOptionResponse, error) {
	req.Category = "option"
	var respBody models.Response[models.GetMarketTickersOptionResponse]
	if err := c.GET("/v5/market/tickers", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/tickers for category: spot
func (c *Client) GetMarketTickersSpot(req models.GetMarketTickersRequest) (*models.GetMarketTickersSpotResponse, error) {
	req.Category = "spot"
	var respBody models.Response[models.GetMarketTickersSpotResponse]
	if err := c.GET("/v5/market/tickers", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/tickers (generic - use category-specific methods for type safety)
func (c *Client) GetMarketTickers(req models.GetMarketTickersRequest) (*models.GetMarketTickersResponse, error) {
	var respBody models.Response[models.GetMarketTickersResponse]
	if err := c.GET("/v5/market/tickers", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/market/time
func (c *Client) GetMarketTime(req models.GetMarketTimeRequest) (*models.GetMarketTimeResponse, error) {
	var respBody models.Response[models.GetMarketTimeResponse]
	if err := c.GET("/v5/market/time", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

