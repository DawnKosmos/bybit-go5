// Code generated by bybitgen; DO NOT EDIT.
package models

// GET /v5/ins-loan/ensure-tokens-convert
type GetInsLoanEnsureTokensConvertRequest struct {
	ProductId string `url:"productId,omitempty"` // Product ID. If not passed, returns all margin products. For spot, it returns coins with a `convertRatio` greater than 0.
}

type GetInsLoanEnsureTokensConvertResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/ins-loan/loan-order
type GetInsLoanLoanOrderRequest struct {
	OrderId string `url:"orderId,omitempty"` // Loan order ID. If not passed, returns all orders sorted by `loanTime` in descending order
	StartTime int64 `url:"startTime,omitempty"` // The start timestamp (ms)
	EndTime int64 `url:"endTime,omitempty"` // The end timestamp (ms)
	Limit int64 `url:"limit,omitempty"` // Limit for data size. [`1`, `100`], Default: `10`
}

type GetInsLoanLoanOrderResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/ins-loan/ltv-convert
type GetInsLoanLtvConvertRequest struct {
}

type GetInsLoanLtvConvertResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/ins-loan/product-infos
type GetInsLoanProductInfosRequest struct {
	ProductId string `url:"productId,omitempty"` // Product ID. If not passed, returns all products
}

type GetInsLoanProductInfosResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/ins-loan/repaid-history
type GetInsLoanRepaidHistoryRequest struct {
	StartTime int64 `url:"startTime,omitempty"` // The start timestamp (ms)
	EndTime int64 `url:"endTime,omitempty"` // The end timestamp (ms)
	Limit int64 `url:"limit,omitempty"` // Limit for data size. [`1`, `100`]. Default: `100`
}

type GetInsLoanRepaidHistoryResponse struct {
	// TODO: fill in response fields parsed from docs
}

// POST /v5/ins-loan/association-uid
type PostInsLoanAssociationUidRequest struct {
	Uid string `json:"uid"` // UID <b>Bind</b> a) the key used must be from one of UIDs in the risk unit; b) input UID must not have an INS loan <b>Unbind</b> a) the key used must be from one of UIDs in the risk unit; b) input UID cannot be the same as the UID used to access the API
	Operate string `json:"operate"` // `0`: bind, `1`: unbind
}

type PostInsLoanAssociationUidResponse struct {
	// TODO: fill in response fields parsed from docs
}

