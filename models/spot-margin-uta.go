// Code generated by bybitgen; DO NOT EDIT.
package models

// GET /v5/spot-margin-trade/collateral
type GetSpotMarginTradeCollateralRequest struct {
	Currency string `url:"currency,omitempty"` // Coin name, uppercase only
}

type GetSpotMarginTradeCollateralResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/spot-margin-trade/data
type GetSpotMarginTradeDataRequest struct {
	VipLevel string `url:"vipLevel,omitempty"` // Vip level
	Currency string `url:"currency,omitempty"` // Coin name, uppercase only
}

type GetSpotMarginTradeDataResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/spot-margin-trade/interest-rate-history
type GetSpotMarginTradeInterestRateHistoryRequest struct {
	Currency string `url:"currency"` // Coin name, uppercase only
	VipLevel string `url:"vipLevel,omitempty"` // Vip level Please note that "No VIP" should be passed like "No%20VIP" in the query string If not passed, it returns your account's VIP level data
	StartTime int64 `url:"startTime,omitempty"` // The start timestamp (ms) Either both time parameters are passed or neither is passed. Returns 7 days data when both are not passed Supports up to 30 days interval when both are passed
	EndTime int64 `url:"endTime,omitempty"` // The end timestamp (ms)
}

type GetSpotMarginTradeInterestRateHistoryResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/spot-margin-trade/state
type GetSpotMarginTradeStateRequest struct {
}

type GetSpotMarginTradeStateResponse struct {
	// TODO: fill in response fields parsed from docs
}

// POST /v5/spot-margin-trade/set-leverage
type PostSpotMarginTradeSetLeverageRequest struct {
	Leverage string `json:"leverage"` // Leverage. [`2`, `10`].
}

type PostSpotMarginTradeSetLeverageResponse struct {
	// TODO: fill in response fields parsed from docs
}

// POST /v5/spot-margin-trade/switch-mode
type PostSpotMarginTradeSwitchModeRequest struct {
	SpotMarginMode string `json:"spotMarginMode"` // `1`: on, `0`: off
}

type PostSpotMarginTradeSwitchModeResponse struct {
	// TODO: fill in response fields parsed from docs
}

