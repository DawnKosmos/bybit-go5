// Code generated by bybitgen; DO NOT EDIT.
package models

// GET /v5/spot-margin-trade/collateral
type GetSpotMarginTradeCollateralRequest struct {
	Currency string `url:"currency,omitempty"` // Coin name, uppercase only
}

type GetSpotMarginTradeCollateralResponse struct {
	List []struct {
		Currency string `json:"currency"` // Coin name
		CollateralRatioList []struct {
			MaxQty string `json:"maxQty"` // Upper limit(in coin) of the tiered range, `""` means positive infinity
			MinQty string `json:"minQty"` // lower limit(in coin) of the tiered range
			CollateralRatio string `json:"collateralRatio"` // Collateral ratio
		} `json:"collateralRatioList"`
	} `json:"list"`
}

// GET /v5/spot-margin-trade/data
type GetSpotMarginTradeDataRequest struct {
	VipLevel string `url:"vipLevel,omitempty"` // Vip level
	Currency string `url:"currency,omitempty"` // Coin name, uppercase only
}

type GetSpotMarginTradeDataResponse struct {
	VipCoinList []struct {
		List []struct {
			Borrowable bool `json:"borrowable"` // Whether it is allowed to be borrowed
			CollateralRatio string `json:"collateralRatio"` // Due to the new Tiered Collateral value logic, this field will no longer be accurate starting on February 19, 2025. Please refer to [Get Tiered Collateral Ratio](tier-collateral-ratio#)
			Currency string `json:"currency"` // Coin name
			HourlyBorrowRate string `json:"hourlyBorrowRate"` // Borrow interest rate per hour
			LiquidationOrder string `json:"liquidationOrder"` // Liquidation order
			MarginCollateral bool `json:"marginCollateral"` // Whether it can be used as a margin collateral currency
			MaxBorrowingAmount string `json:"maxBorrowingAmount"` // Max borrow amount
		} `json:"list"`
		VipLevel string `json:"vipLevel"` // Vip level
	} `json:"vipCoinList"`
}

// GET /v5/spot-margin-trade/interest-rate-history
type GetSpotMarginTradeInterestRateHistoryRequest struct {
	Currency string `url:"currency"` // Coin name, uppercase only
	VipLevel string `url:"vipLevel,omitempty"` // Vip level Please note that "No VIP" should be passed like "No%20VIP" in the query string If not passed, it returns your account's VIP level data
	StartTime int64 `url:"startTime,omitempty"` // The start timestamp (ms) Either both time parameters are passed or neither is passed. Returns 7 days data when both are not passed Supports up to 30 days interval when both are passed
	EndTime int64 `url:"endTime,omitempty"` // The end timestamp (ms)
}

type GetSpotMarginTradeInterestRateHistoryResponse struct {
	List string `json:"list"`
}

// GET /v5/spot-margin-trade/state
type GetSpotMarginTradeStateRequest struct {
}

type GetSpotMarginTradeStateResponse struct {
	SpotLeverage string `json:"spotLeverage"` // Spot margin leverage. Returns `""` if the margin trade is turned off
	SpotMarginMode string `json:"spotMarginMode"` // Spot margin status. `1`: on, `0`: off
	EffectiveLeverage string `json:"effectiveLeverage"` // actual leverage ratio. Precision retains 2 decimal places, truncate downwards
}

// POST /v5/spot-margin-trade/set-leverage
type PostSpotMarginTradeSetLeverageRequest struct {
	Leverage string `json:"leverage"` // Leverage. [`2`, `10`].
}

type PostSpotMarginTradeSetLeverageResponse struct {
	// TODO: fill in response fields parsed from docs
}

// POST /v5/spot-margin-trade/switch-mode
type PostSpotMarginTradeSwitchModeRequest struct {
	SpotMarginMode string `json:"spotMarginMode"` // `1`: on, `0`: off
}

type PostSpotMarginTradeSwitchModeResponse struct {
	SpotMarginMode string `json:"spotMarginMode"` // Spot margin status. `1`: on, `0`: off
}

