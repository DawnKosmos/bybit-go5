// Code generated by bybitgen; DO NOT EDIT.
package models

// GET /v5/earn/order
type GetEarnOrderRequest struct {
	Category string `url:"category"` // `FlexibleSaving`,`OnChain` **Remarks**: currently, only flexible savings and OnChain is supported
	OrderId string `url:"orderId,omitempty"` // Order ID either orderId or orderLinkId is **required** if both are passed, make sure they're matched, otherwise returning empty result
	OrderLinkId string `url:"orderLinkId,omitempty"` // Order link ID **Remarks**: Always return the latest one if order link id is ever reused when querying by orderLinkId only
}

type GetEarnOrderResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/earn/position
type GetEarnPositionRequest struct {
	Category string `url:"category"` // `FlexibleSaving`,`OnChain`
	ProductId string `url:"productId,omitempty"` // Product ID
	Coin string `url:"coin,omitempty"` // Coin name
}

type GetEarnPositionResponse struct {
	// TODO: fill in response fields parsed from docs
}

// GET /v5/earn/product
type GetEarnProductRequest struct {
	Category string `url:"category"` // `FlexibleSaving`,`OnChain` **Remarks**: currently, only flexible savings and on chain is supported
	Coin string `url:"coin,omitempty"` // Coin name, uppercase only
}

type GetEarnProductResponse struct {
	// TODO: fill in response fields parsed from docs
}

// POST /v5/earn/place-order
type PostEarnPlaceOrderRequest struct {
	Category string `json:"category"` // `FlexibleSaving`,`OnChain` **Remarks**: currently, only flexible savings and on chain is supported
	OrderType string `json:"orderType"` // `Stake`, `Redeem`
	AccountType string `json:"accountType"` // `FUND`, `UNIFIED`. Onchain only supports FUND
	Amount string `json:"amount"` // Stake amount needs to satisfy minStake and maxStake Both stake and redeem amount need to satify precision requirement
	Coin string `json:"coin"` // Coin name
	ProductId string `json:"productId"` // Product ID
	OrderLinkId string `json:"orderLinkId"` // Customised order ID, used to prevent from replay support up to 36 characters The same orderLinkId can't be used in 30 mins
	RedeemPositionId string `json:"redeemPositionId,omitempty"` // The position ID that the user needs to redeem. Only is required in Onchain non-LST mode
}

type PostEarnPlaceOrderResponse struct {
	// TODO: fill in response fields parsed from docs
}

