// Code generated by bybitgen; DO NOT EDIT.
package bybit

import (
	"github.com/DawnKosmos/bybit-go5/models"
)

// GET /v5/user/escrow_sub_members
func (c *Client) GetUserEscrow_sub_members(req models.GetUserEscrow_sub_membersRequest) (*models.GetUserEscrow_sub_membersResponse, error) {
	var respBody models.Response[models.GetUserEscrow_sub_membersResponse]
	if err := c.GET("/v5/user/escrow_sub_members", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/user/get-member-type
func (c *Client) GetUserGetMemberType(req models.GetUserGetMemberTypeRequest) (*models.GetUserGetMemberTypeResponse, error) {
	var respBody models.Response[models.GetUserGetMemberTypeResponse]
	if err := c.GET("/v5/user/get-member-type", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/user/query-api
func (c *Client) GetUserQueryApi(req models.GetUserQueryApiRequest) (*models.GetUserQueryApiResponse, error) {
	var respBody models.Response[models.GetUserQueryApiResponse]
	if err := c.GET("/v5/user/query-api", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/user/query-sub-members
func (c *Client) GetUserQuerySubMembers(req models.GetUserQuerySubMembersRequest) (*models.GetUserQuerySubMembersResponse, error) {
	var respBody models.Response[models.GetUserQuerySubMembersResponse]
	if err := c.GET("/v5/user/query-sub-members", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/user/sub-apikeys
func (c *Client) GetUserSubApikeys(req models.GetUserSubApikeysRequest) (*models.GetUserSubApikeysResponse, error) {
	var respBody models.Response[models.GetUserSubApikeysResponse]
	if err := c.GET("/v5/user/sub-apikeys", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/user/submembers
func (c *Client) GetUserSubmembers(req models.GetUserSubmembersRequest) (*models.GetUserSubmembersResponse, error) {
	var respBody models.Response[models.GetUserSubmembersResponse]
	if err := c.GET("/v5/user/submembers", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/user/create-sub-api
func (c *Client) PostUserCreateSubApi(req models.PostUserCreateSubApiRequest) (*models.PostUserCreateSubApiResponse, error) {
	var respBody models.Response[models.PostUserCreateSubApiResponse]
	if err := c.POST("/v5/user/create-sub-api", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/user/create-sub-member
func (c *Client) PostUserCreateSubMember(req models.PostUserCreateSubMemberRequest) (*models.PostUserCreateSubMemberResponse, error) {
	var respBody models.Response[models.PostUserCreateSubMemberResponse]
	if err := c.POST("/v5/user/create-sub-member", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/user/del-submember
func (c *Client) PostUserDelSubmember(req models.PostUserDelSubmemberRequest) (*models.PostUserDelSubmemberResponse, error) {
	var respBody models.Response[models.PostUserDelSubmemberResponse]
	if err := c.POST("/v5/user/del-submember", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/user/delete-api
func (c *Client) PostUserDeleteApi(req models.PostUserDeleteApiRequest) (*models.PostUserDeleteApiResponse, error) {
	var respBody models.Response[models.PostUserDeleteApiResponse]
	if err := c.POST("/v5/user/delete-api", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/user/delete-sub-api
func (c *Client) PostUserDeleteSubApi(req models.PostUserDeleteSubApiRequest) (*models.PostUserDeleteSubApiResponse, error) {
	var respBody models.Response[models.PostUserDeleteSubApiResponse]
	if err := c.POST("/v5/user/delete-sub-api", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/user/frozen-sub-member
func (c *Client) PostUserFrozenSubMember(req models.PostUserFrozenSubMemberRequest) (*models.PostUserFrozenSubMemberResponse, error) {
	var respBody models.Response[models.PostUserFrozenSubMemberResponse]
	if err := c.POST("/v5/user/frozen-sub-member", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/user/update-api
func (c *Client) PostUserUpdateApi(req models.PostUserUpdateApiRequest) (*models.PostUserUpdateApiResponse, error) {
	var respBody models.Response[models.PostUserUpdateApiResponse]
	if err := c.POST("/v5/user/update-api", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/user/update-sub-api
func (c *Client) PostUserUpdateSubApi(req models.PostUserUpdateSubApiRequest) (*models.PostUserUpdateSubApiResponse, error) {
	var respBody models.Response[models.PostUserUpdateSubApiResponse]
	if err := c.POST("/v5/user/update-sub-api", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

