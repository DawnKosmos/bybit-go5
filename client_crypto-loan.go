// Code generated by bybitgen; DO NOT EDIT.
package bybit

import (
	"github.com/DawnKosmos/bybit-go5/models"
)

// GET /v5/crypto-loan/adjustment-history
func (c *Client) GetCryptoLoanAdjustmentHistory(req models.GetCryptoLoanAdjustmentHistoryRequest) (*models.GetCryptoLoanAdjustmentHistoryResponse, error) {
	var respBody models.Response[models.GetCryptoLoanAdjustmentHistoryResponse]
	if err := c.GET("/v5/crypto-loan/adjustment-history", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/crypto-loan/borrow-history
func (c *Client) GetCryptoLoanBorrowHistory(req models.GetCryptoLoanBorrowHistoryRequest) (*models.GetCryptoLoanBorrowHistoryResponse, error) {
	var respBody models.Response[models.GetCryptoLoanBorrowHistoryResponse]
	if err := c.GET("/v5/crypto-loan/borrow-history", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/crypto-loan/borrowable-collateralisable-number
func (c *Client) GetCryptoLoanBorrowableCollateralisableNumber(req models.GetCryptoLoanBorrowableCollateralisableNumberRequest) (*models.GetCryptoLoanBorrowableCollateralisableNumberResponse, error) {
	var respBody models.Response[models.GetCryptoLoanBorrowableCollateralisableNumberResponse]
	if err := c.GET("/v5/crypto-loan/borrowable-collateralisable-number", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/crypto-loan/collateral-data
func (c *Client) GetCryptoLoanCollateralData(req models.GetCryptoLoanCollateralDataRequest) (*models.GetCryptoLoanCollateralDataResponse, error) {
	var respBody models.Response[models.GetCryptoLoanCollateralDataResponse]
	if err := c.GET("/v5/crypto-loan/collateral-data", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/crypto-loan/loanable-data
func (c *Client) GetCryptoLoanLoanableData(req models.GetCryptoLoanLoanableDataRequest) (*models.GetCryptoLoanLoanableDataResponse, error) {
	var respBody models.Response[models.GetCryptoLoanLoanableDataResponse]
	if err := c.GET("/v5/crypto-loan/loanable-data", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/crypto-loan/max-collateral-amount
func (c *Client) GetCryptoLoanMaxCollateralAmount(req models.GetCryptoLoanMaxCollateralAmountRequest) (*models.GetCryptoLoanMaxCollateralAmountResponse, error) {
	var respBody models.Response[models.GetCryptoLoanMaxCollateralAmountResponse]
	if err := c.GET("/v5/crypto-loan/max-collateral-amount", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/crypto-loan/ongoing-orders
func (c *Client) GetCryptoLoanOngoingOrders(req models.GetCryptoLoanOngoingOrdersRequest) (*models.GetCryptoLoanOngoingOrdersResponse, error) {
	var respBody models.Response[models.GetCryptoLoanOngoingOrdersResponse]
	if err := c.GET("/v5/crypto-loan/ongoing-orders", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/crypto-loan/repayment-history
func (c *Client) GetCryptoLoanRepaymentHistory(req models.GetCryptoLoanRepaymentHistoryRequest) (*models.GetCryptoLoanRepaymentHistoryResponse, error) {
	var respBody models.Response[models.GetCryptoLoanRepaymentHistoryResponse]
	if err := c.GET("/v5/crypto-loan/repayment-history", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/crypto-loan/adjust-ltv
func (c *Client) PostCryptoLoanAdjustLtv(req models.PostCryptoLoanAdjustLtvRequest) (*models.PostCryptoLoanAdjustLtvResponse, error) {
	var respBody models.Response[models.PostCryptoLoanAdjustLtvResponse]
	if err := c.POST("/v5/crypto-loan/adjust-ltv", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/crypto-loan/borrow
func (c *Client) PostCryptoLoanBorrow(req models.PostCryptoLoanBorrowRequest) (*models.PostCryptoLoanBorrowResponse, error) {
	var respBody models.Response[models.PostCryptoLoanBorrowResponse]
	if err := c.POST("/v5/crypto-loan/borrow", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/crypto-loan/repay
func (c *Client) PostCryptoLoanRepay(req models.PostCryptoLoanRepayRequest) (*models.PostCryptoLoanRepayResponse, error) {
	var respBody models.Response[models.PostCryptoLoanRepayResponse]
	if err := c.POST("/v5/crypto-loan/repay", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

