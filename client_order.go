// Code generated by bybitgen; DO NOT EDIT.
package bybit

import (
	"github.com/DawnKosmos/bybit-go5/models"
)

// GET /v5/execution/list
func (c *Client) GetExecutionList(req models.GetExecutionListRequest) (*models.GetExecutionListResponse, error) {
	var respBody models.Response[models.GetExecutionListResponse]
	if err := c.GET("/v5/execution/list", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/order/history
func (c *Client) GetOrderHistory(req models.GetOrderHistoryRequest) (*models.GetOrderHistoryResponse, error) {
	var respBody models.Response[models.GetOrderHistoryResponse]
	if err := c.GET("/v5/order/history", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/order/realtime
func (c *Client) GetOrderRealtime(req models.GetOrderRealtimeRequest) (*models.GetOrderRealtimeResponse, error) {
	var respBody models.Response[models.GetOrderRealtimeResponse]
	if err := c.GET("/v5/order/realtime", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// GET /v5/order/spot-borrow-check
func (c *Client) GetOrderSpotBorrowCheck(req models.GetOrderSpotBorrowCheckRequest) (*models.GetOrderSpotBorrowCheckResponse, error) {
	var respBody models.Response[models.GetOrderSpotBorrowCheckResponse]
	if err := c.GET("/v5/order/spot-borrow-check", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/amend
func (c *Client) PostOrderAmend(req models.PostOrderAmendRequest) (*models.PostOrderAmendResponse, error) {
	var respBody models.Response[models.PostOrderAmendResponse]
	if err := c.POST("/v5/order/amend", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/amend-batch
func (c *Client) PostOrderAmendBatch(req models.PostOrderAmendBatchRequest) (*models.PostOrderAmendBatchResponse, error) {
	var respBody models.Response[models.PostOrderAmendBatchResponse]
	if err := c.POST("/v5/order/amend-batch", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/cancel
func (c *Client) PostOrderCancel(req models.PostOrderCancelRequest) (*models.PostOrderCancelResponse, error) {
	var respBody models.Response[models.PostOrderCancelResponse]
	if err := c.POST("/v5/order/cancel", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/cancel-all
func (c *Client) PostOrderCancelAll(req models.PostOrderCancelAllRequest) (*models.PostOrderCancelAllResponse, error) {
	var respBody models.Response[models.PostOrderCancelAllResponse]
	if err := c.POST("/v5/order/cancel-all", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/cancel-batch
func (c *Client) PostOrderCancelBatch(req models.PostOrderCancelBatchRequest) (*models.PostOrderCancelBatchResponse, error) {
	var respBody models.Response[models.PostOrderCancelBatchResponse]
	if err := c.POST("/v5/order/cancel-batch", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/create
func (c *Client) PostOrderCreate(req models.PostOrderCreateRequest) (*models.PostOrderCreateResponse, error) {
	var respBody models.Response[models.PostOrderCreateResponse]
	if err := c.POST("/v5/order/create", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/create-batch
func (c *Client) PostOrderCreateBatch(req models.PostOrderCreateBatchRequest) (*models.PostOrderCreateBatchResponse, error) {
	var respBody models.Response[models.PostOrderCreateBatchResponse]
	if err := c.POST("/v5/order/create-batch", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/disconnected-cancel-all
func (c *Client) PostOrderDisconnectedCancelAll(req models.PostOrderDisconnectedCancelAllRequest) (*models.PostOrderDisconnectedCancelAllResponse, error) {
	var respBody models.Response[models.PostOrderDisconnectedCancelAllResponse]
	if err := c.POST("/v5/order/disconnected-cancel-all", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

// POST /v5/order/pre-check
func (c *Client) PostOrderPreCheck(req models.PostOrderPreCheckRequest) (*models.PostOrderPreCheckResponse, error) {
	var respBody models.Response[models.PostOrderPreCheckResponse]
	if err := c.POST("/v5/order/pre-check", req, &respBody); err != nil { return nil, err }
	return &respBody.Result, nil
}

